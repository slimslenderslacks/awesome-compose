{"cells":[{"kind":1,"language":"markdown","value":"## Compose sample application\n\n### Use with Docker Development Environments\n\nYou can open this sample in the Dev Environments feature of Docker Desktop version 4.12 or later.\n\n[Open in Docker Dev Environments ](https://open.docker.com/dashboard/dev-envs?url=https://github.com/docker/awesome-compose/tree/master/flask-redis)\n\n### Python/Flask application using a Redis database\n\nProject structure:\n\n```\n.\n├── Dockerfile\n├── README.md\n├── app.py\n├── compose.yaml\n└── requirements.txt\n\n```\n\n\n\n[*compose.yaml*](compose.yaml)"},{"kind":2,"language":"dockercompose","value":""},{"kind":1,"language":"markdown","value":"## Deploy with docker compose"},{"kind":2,"language":"shellscript","value":"docker compose up -d"},{"kind":1,"language":"markdown","value":"## Expected result\n\nListing containers must show one container running and the port mapping as below:"},{"kind":2,"language":"shellscript","value":"docker compose ps"},{"kind":1,"language":"markdown","value":"After the application starts, navigate to `http://localhost:8000` in your web browser or run:"},{"kind":2,"language":"shellscript","value":"curl localhost:8000"},{"kind":1,"language":"markdown","value":"## Monitoring Redis keys\n\nConnect to redis database by using `redis-cli` command and monitor the keys."},{"kind":2,"language":"shellscript","value":""},{"kind":1,"language":"markdown","value":"Stop and remove the containers"},{"kind":2,"language":"shellscript","value":"docker compose down"}]}
{"cells":[{"kind":1,"language":"markdown","value":"## Compose sample application\n\n### Use with Docker Development Environments\n\nYou can open this sample in the Dev Environments feature of Docker Desktop version 4.12 or later.\n\n[Open in Docker Dev Environments ](https://open.docker.com/dashboard/dev-envs?url=https://github.com/docker/awesome-compose/tree/master/sparkjava-mysql)\n\n### Java Spark application with MySQL database\n\nProject structure:\n\n```\n.\n├── backend\n│   ├── Dockerfile\n│   └── ...\n├── db\n│   └── password.txt\n├── compose.yaml\n└── README.md\n\n\n```\n\n\n\n[*compose.yaml*](compose.yaml)"},{"kind":2,"language":"dockercompose","value":""},{"kind":1,"language":"markdown","value":"The compose file defines an application with two services `backend` and `db`.\nWhen deploying the application, docker compose maps port 8080 of the backend service container to port 80 of the host as specified in the file.\nMake sure port 8080 on the host is not already being in use.\n\n> ℹ️ ***INFO***\nFor compatibility purpose between `AMD64` and `ARM64` architecture, we use a MariaDB as database instead of MySQL.\nYou still can use the MySQL image by uncommenting the following line in the Compose file\n`#image: mysql:8.0.27`\n\n## Deploy with docker compose"},{"kind":2,"language":"shellscript","value":"docker compose up -d"},{"kind":1,"language":"markdown","value":"## Expected result\n\nListing containers must show two containers running and the port mapping as below:"},{"kind":2,"language":"shellscript","value":"docker ps"},{"kind":1,"language":"markdown","value":"After the application starts, run:"},{"kind":2,"language":"shellscript","value":"curl localhost:8080"},{"kind":1,"language":"markdown","value":"Stop and remove the containers"},{"kind":2,"language":"shellscript","value":"docker compose down"}]}
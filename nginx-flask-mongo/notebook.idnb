{"cells":[{"kind":1,"language":"markdown","value":"## Compose sample application\n\n### Use with Docker Development Environments\n\nYou can open this sample in the Dev Environments feature of Docker Desktop version 4.12 or later.\n\n[Open in Docker Dev Environments ](https://open.docker.com/dashboard/dev-envs?url=https://github.com/docker/awesome-compose/tree/master/nginx-flask-mongo)\n\n### Python/Flask application with Nginx proxy and a Mongo database\n\nProject structure:\n\n```\n.\n├── compose.yaml\n├── flask\n│   ├── Dockerfile\n│   ├── requirements.txt\n│   └── server.py\n└── nginx\n    └── nginx.conf\n\n\n```\n\n\n\n[*compose.yaml*](compose.yaml)"},{"kind":2,"language":"dockercompose","value":""},{"kind":1,"language":"markdown","value":"The compose file defines an application with three services `web`, `backend` and `db`.\nWhen deploying the application, docker compose maps port 80 of the web service container to port 80 of the host as specified in the file.\nMake sure port 80 on the host is not being used by another container, otherwise the port should be changed.\n\n## Deploy with docker compose"},{"kind":2,"language":"shellscript","value":"docker compose up -d"},{"kind":1,"language":"markdown","value":"## Expected result\n\nListing containers must show three containers running and the port mapping as below:"},{"kind":2,"language":"shellscript","value":"docker ps"},{"kind":1,"language":"markdown","value":"After the application starts, navigate to `http://localhost:80` in your web browser or run:"},{"kind":2,"language":"shellscript","value":"curl localhost:80"},{"kind":1,"language":"markdown","value":"Stop and remove the containers"},{"kind":2,"language":"shellscript","value":"docker compose down"}]}
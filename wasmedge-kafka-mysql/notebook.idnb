{"cells":[{"kind":1,"language":"markdown","value":"# Compose sample application\n\n<img src=\"../icon_wasm.svg\" width=\"500\"/>\n\nThis sample demonstrates a WebAssembly (Wasm) microservice written in Rust. It subscribes to a Kafka queue topic on a Redpanda server, and then transforms and saves each message into a MySQL (MariaDB) database table. The microservice is compiled into Wasm and runs in the WasmEdge runtime, which is a secure and lightweight alternative to natively compiled Rust apps in Linux containers.\n\n## Use with Docker Development Environments\n\nYou will need a version of Docker Desktop or Docker CLI with Wasm support.\n\n* [Install Docker Desktop + Wasm (Beta)](https://docs.docker.com/desktop/wasm/)\n* [Install Docker CLI + Wasm](https://github.com/chris-crone/wasm-day-na-22/tree/main/server)\n\n\n## WasmEdge server with Redpanda and MySQL database\n\nProject structure:\n\n```\n.\n+-- compose.yml\n|-- etl\n    |-- Dockerfile\n    |-- Cargo.toml\n    +-- src\n        |-- main.rs\n|-- kafka\n    |-- order.json\n|-- db\n    |-- db-password.txt\n\n```\n\n\n\nThe [compose.yml](compose.yml) is as follows."},{"kind":2,"language":"shellscript","value":""},{"kind":1,"language":"markdown","value":"The compose file defines an application with three services `redpanda`, `etl` and `db`. The `redpanda` service is a Kafka-compatible messaging server that produces messages in a queue topic. The `etl` service, in the WasmEdge container that subscribes to the queue topic and receives incoming messages. Each incoming message is parsed and stored in the `db` MySQL (MariaDB) database server.\n\n## Deploy with docker compose"},{"kind":2,"language":"shellscript","value":"docker compose up -d"},{"kind":1,"language":"markdown","value":"## Expected result"},{"kind":2,"language":"shellscript","value":"docker compose ps"},{"kind":1,"language":"markdown","value":"After the application starts,\nlog into the Redpanda container and send a message to the queue topic `order` as follows."},{"kind":2,"language":"shellscript","value":"docker compose exec redpanda /bin/bash"},{"kind":1,"language":"markdown","value":"To see the data in the database container, you can use the following commands."},{"kind":2,"language":"shellscript","value":"docker compose exec db /bin/bash"}]}